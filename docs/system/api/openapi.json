{
  "components": {
    "schemas": {
      "ApprovalActionRequest": {
        "additionalProperties": false,
        "description": "Payload supplied when approving or rejecting a booking request.",
        "properties": {
          "reason": {
            "anyOf": [
              {
                "maxLength": 500,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "title": "ApprovalActionRequest",
        "type": "object"
      },
      "ApprovalDecision": {
        "description": "Approval decision enumeration",
        "enum": [
          "APPROVED",
          "REJECTED"
        ],
        "title": "ApprovalDecision",
        "type": "string"
      },
      "ApprovalNotificationRead": {
        "description": "Schema describing notifications generated by approval decisions.",
        "properties": {
          "approval_level": {
            "title": "Approval Level",
            "type": "integer"
          },
          "approver_id": {
            "title": "Approver Id",
            "type": "integer"
          },
          "booking_id": {
            "title": "Booking Id",
            "type": "integer"
          },
          "decided_at": {
            "format": "date-time",
            "title": "Decided At",
            "type": "string"
          },
          "decision": {
            "$ref": "#/components/schemas/ApprovalDecision"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "requester_id": {
            "title": "Requester Id",
            "type": "integer"
          }
        },
        "required": [
          "booking_id",
          "requester_id",
          "approver_id",
          "approval_level",
          "decision",
          "message",
          "decided_at"
        ],
        "title": "ApprovalNotificationRead",
        "type": "object"
      },
      "ApprovalRead": {
        "description": "Representation of a recorded approval decision.",
        "properties": {
          "approval_level": {
            "title": "Approval Level",
            "type": "integer"
          },
          "approver_id": {
            "title": "Approver Id",
            "type": "integer"
          },
          "booking_request_id": {
            "title": "Booking Request Id",
            "type": "integer"
          },
          "decided_at": {
            "format": "date-time",
            "title": "Decided At",
            "type": "string"
          },
          "decision": {
            "$ref": "#/components/schemas/ApprovalDecision"
          },
          "delegated_from_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delegated From Id"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "required": [
          "id",
          "booking_request_id",
          "approver_id",
          "approval_level",
          "decision",
          "decided_at"
        ],
        "title": "ApprovalRead",
        "type": "object"
      },
      "AssignmentCreate": {
        "additionalProperties": false,
        "description": "Payload for creating a new assignment.",
        "properties": {
          "auto_assign": {
            "default": true,
            "title": "Auto Assign",
            "type": "boolean"
          },
          "booking_request_id": {
            "minimum": 1.0,
            "title": "Booking Request Id",
            "type": "integer"
          },
          "driver_id": {
            "anyOf": [
              {
                "minimum": 1.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Driver Id"
          },
          "notes": {
            "anyOf": [
              {
                "maxLength": 2000,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "vehicle_id": {
            "anyOf": [
              {
                "minimum": 1.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vehicle Id"
          }
        },
        "required": [
          "booking_request_id"
        ],
        "title": "AssignmentCreate",
        "type": "object"
      },
      "AssignmentDriverSuggestion": {
        "description": "Detailed information about a suggested driver.",
        "properties": {
          "full_name": {
            "title": "Full Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "license_number": {
            "title": "License Number",
            "type": "string"
          }
        },
        "required": [
          "id",
          "full_name",
          "license_number"
        ],
        "title": "AssignmentDriverSuggestion",
        "type": "object"
      },
      "AssignmentRead": {
        "description": "Read model for persisted assignments.",
        "properties": {
          "assigned_at": {
            "format": "date-time",
            "title": "Assigned At",
            "type": "string"
          },
          "assigned_by": {
            "title": "Assigned By",
            "type": "integer"
          },
          "booking_request_id": {
            "title": "Booking Request Id",
            "type": "integer"
          },
          "driver_id": {
            "title": "Driver Id",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "vehicle_id": {
            "title": "Vehicle Id",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "booking_request_id",
          "vehicle_id",
          "driver_id",
          "assigned_by",
          "assigned_at"
        ],
        "title": "AssignmentRead",
        "type": "object"
      },
      "AssignmentSuggestionRead": {
        "description": "Response model for assignment suggestions.",
        "properties": {
          "driver": {
            "$ref": "#/components/schemas/AssignmentDriverSuggestion"
          },
          "reasons": {
            "items": {
              "type": "string"
            },
            "title": "Reasons",
            "type": "array"
          },
          "score": {
            "title": "Score",
            "type": "integer"
          },
          "vehicle": {
            "$ref": "#/components/schemas/AssignmentVehicleSuggestion"
          }
        },
        "required": [
          "vehicle",
          "driver",
          "score",
          "reasons"
        ],
        "title": "AssignmentSuggestionRead",
        "type": "object"
      },
      "AssignmentUpdate": {
        "additionalProperties": false,
        "description": "Payload for updating an existing assignment.",
        "properties": {
          "auto_assign": {
            "default": false,
            "title": "Auto Assign",
            "type": "boolean"
          },
          "driver_id": {
            "anyOf": [
              {
                "minimum": 1.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Driver Id"
          },
          "notes": {
            "anyOf": [
              {
                "maxLength": 2000,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "vehicle_id": {
            "anyOf": [
              {
                "minimum": 1.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vehicle Id"
          }
        },
        "title": "AssignmentUpdate",
        "type": "object"
      },
      "AssignmentVehicleSuggestion": {
        "description": "Detailed information about a suggested vehicle.",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "matches_preference": {
            "title": "Matches Preference",
            "type": "boolean"
          },
          "registration_number": {
            "title": "Registration Number",
            "type": "string"
          },
          "seating_capacity": {
            "title": "Seating Capacity",
            "type": "integer"
          },
          "spare_seats": {
            "title": "Spare Seats",
            "type": "integer"
          },
          "vehicle_type": {
            "$ref": "#/components/schemas/VehicleType"
          }
        },
        "required": [
          "id",
          "registration_number",
          "vehicle_type",
          "seating_capacity",
          "matches_preference",
          "spare_seats"
        ],
        "title": "AssignmentVehicleSuggestion",
        "type": "object"
      },
      "AuditLogRead": {
        "description": "Audit log entry representation.",
        "properties": {
          "action": {
            "title": "Action",
            "type": "string"
          },
          "context": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          },
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "resource": {
            "title": "Resource",
            "type": "string"
          },
          "status_code": {
            "title": "Status Code",
            "type": "integer"
          },
          "user_agent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "required": [
          "id",
          "user_id",
          "action",
          "resource",
          "status_code",
          "ip_address",
          "user_agent",
          "context",
          "created_at"
        ],
        "title": "AuditLogRead",
        "type": "object"
      },
      "AuditLogSearchResponse": {
        "description": "Envelope for audit log search results.",
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/AuditLogRead"
            },
            "title": "Results",
            "type": "array"
          },
          "total": {
            "title": "Total",
            "type": "integer"
          }
        },
        "required": [
          "results",
          "total"
        ],
        "title": "AuditLogSearchResponse",
        "type": "object"
      },
      "Body_upload_expense_receipt_api_v1_job_runs_by_booking__booking_id__expenses_receipts_post": {
        "properties": {
          "file": {
            "format": "binary",
            "title": "File",
            "type": "string"
          }
        },
        "required": [
          "file"
        ],
        "title": "Body_upload_expense_receipt_api_v1_job_runs_by_booking__booking_id__expenses_receipts_post",
        "type": "object"
      },
      "Body_upload_vehicle_document_api_v1_vehicles__vehicle_id__documents__document_type__post": {
        "properties": {
          "file": {
            "format": "binary",
            "title": "File",
            "type": "string"
          }
        },
        "required": [
          "file"
        ],
        "title": "Body_upload_vehicle_document_api_v1_vehicles__vehicle_id__documents__document_type__post",
        "type": "object"
      },
      "Body_upload_vehicle_image_api_v1_uploads_vehicle_images_post": {
        "properties": {
          "file": {
            "format": "binary",
            "title": "File",
            "type": "string"
          }
        },
        "required": [
          "file"
        ],
        "title": "Body_upload_vehicle_image_api_v1_uploads_vehicle_images_post",
        "type": "object"
      },
      "BookingApprovalResponse": {
        "description": "Response payload returned after recording an approval decision.",
        "properties": {
          "approval": {
            "$ref": "#/components/schemas/ApprovalRead"
          },
          "booking": {
            "$ref": "#/components/schemas/BookingRequestRead"
          },
          "notification": {
            "$ref": "#/components/schemas/ApprovalNotificationRead"
          }
        },
        "required": [
          "booking",
          "approval",
          "notification"
        ],
        "title": "BookingApprovalResponse",
        "type": "object"
      },
      "BookingPatternReport": {
        "description": "Booking pattern insight grouped by day of week.",
        "properties": {
          "average_bookings": {
            "minimum": 0.0,
            "title": "Average Bookings",
            "type": "number"
          },
          "average_passengers": {
            "minimum": 0.0,
            "title": "Average Passengers",
            "type": "number"
          },
          "day_of_week": {
            "title": "Day Of Week",
            "type": "string"
          },
          "peak_hour": {
            "maximum": 23.0,
            "minimum": 0.0,
            "title": "Peak Hour",
            "type": "integer"
          },
          "weekday_index": {
            "maximum": 6.0,
            "minimum": 0.0,
            "title": "Weekday Index",
            "type": "integer"
          }
        },
        "required": [
          "day_of_week",
          "weekday_index",
          "average_bookings",
          "peak_hour",
          "average_passengers"
        ],
        "title": "BookingPatternReport",
        "type": "object"
      },
      "BookingRequestCreate": {
        "additionalProperties": false,
        "description": "Schema for creating booking requests.",
        "properties": {
          "department": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "dropoff_location": {
            "maxLength": 500,
            "title": "Dropoff Location",
            "type": "string"
          },
          "end_datetime": {
            "format": "date-time",
            "title": "End Datetime",
            "type": "string"
          },
          "passenger_count": {
            "default": 1,
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Passenger Count",
            "type": "integer"
          },
          "pickup_location": {
            "maxLength": 500,
            "title": "Pickup Location",
            "type": "string"
          },
          "purpose": {
            "maxLength": 500,
            "title": "Purpose",
            "type": "string"
          },
          "requester_id": {
            "anyOf": [
              {
                "minimum": 1.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requester Id"
          },
          "special_requirements": {
            "anyOf": [
              {
                "maxLength": 2000,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Requirements"
          },
          "start_datetime": {
            "format": "date-time",
            "title": "Start Datetime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BookingStatus"
              }
            ],
            "default": "DRAFT"
          },
          "vehicle_preference": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VehiclePreference"
              }
            ],
            "default": "ANY"
          }
        },
        "required": [
          "purpose",
          "start_datetime",
          "end_datetime",
          "pickup_location",
          "dropoff_location"
        ],
        "title": "BookingRequestCreate",
        "type": "object"
      },
      "BookingRequestRead": {
        "additionalProperties": false,
        "description": "Response schema for booking requests.",
        "properties": {
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "department": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "dropoff_location": {
            "maxLength": 500,
            "title": "Dropoff Location",
            "type": "string"
          },
          "end_datetime": {
            "format": "date-time",
            "title": "End Datetime",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "passenger_count": {
            "default": 1,
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Passenger Count",
            "type": "integer"
          },
          "pickup_location": {
            "maxLength": 500,
            "title": "Pickup Location",
            "type": "string"
          },
          "purpose": {
            "maxLength": 500,
            "title": "Purpose",
            "type": "string"
          },
          "requester_id": {
            "title": "Requester Id",
            "type": "integer"
          },
          "special_requirements": {
            "anyOf": [
              {
                "maxLength": 2000,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Requirements"
          },
          "start_datetime": {
            "format": "date-time",
            "title": "Start Datetime",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/BookingStatus"
          },
          "submitted_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submitted At"
          },
          "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "vehicle_preference": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VehiclePreference"
              }
            ],
            "default": "ANY"
          }
        },
        "required": [
          "purpose",
          "start_datetime",
          "end_datetime",
          "pickup_location",
          "dropoff_location",
          "id",
          "requester_id",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "BookingRequestRead",
        "type": "object"
      },
      "BookingRequestUpdate": {
        "additionalProperties": false,
        "description": "Schema for updating booking request details.",
        "properties": {
          "department": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "dropoff_location": {
            "anyOf": [
              {
                "maxLength": 500,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dropoff Location"
          },
          "end_datetime": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Datetime"
          },
          "passenger_count": {
            "anyOf": [
              {
                "maximum": 100.0,
                "minimum": 1.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Passenger Count"
          },
          "pickup_location": {
            "anyOf": [
              {
                "maxLength": 500,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pickup Location"
          },
          "purpose": {
            "anyOf": [
              {
                "maxLength": 500,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Purpose"
          },
          "special_requirements": {
            "anyOf": [
              {
                "maxLength": 2000,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Requirements"
          },
          "start_datetime": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Datetime"
          },
          "vehicle_preference": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VehiclePreference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "BookingRequestUpdate",
        "type": "object"
      },
      "BookingStatus": {
        "description": "Booking request status enumeration",
        "enum": [
          "DRAFT",
          "REQUESTED",
          "APPROVED",
          "REJECTED",
          "ASSIGNED",
          "IN_PROGRESS",
          "COMPLETED",
          "CANCELLED"
        ],
        "title": "BookingStatus",
        "type": "string"
      },
      "BookingStatusUpdate": {
        "additionalProperties": false,
        "description": "Schema for updating the booking request status.",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/BookingStatus"
          }
        },
        "required": [
          "status"
        ],
        "title": "BookingStatusUpdate",
        "type": "object"
      },
      "CalendarConflictView": {
        "description": "Conflict window between overlapping events.",
        "properties": {
          "end": {
            "format": "date-time",
            "title": "End",
            "type": "string"
          },
          "event_reference_ids": {
            "items": {
              "type": "string"
            },
            "title": "Event Reference Ids",
            "type": "array"
          },
          "start": {
            "format": "date-time",
            "title": "Start",
            "type": "string"
          }
        },
        "required": [
          "start",
          "end",
          "event_reference_ids"
        ],
        "title": "CalendarConflictView",
        "type": "object"
      },
      "CalendarEventCreate": {
        "description": "Schema for creating manual calendar events.",
        "properties": {
          "booking_request_id": {
            "anyOf": [
              {
                "minimum": 1.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Booking Request Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "end": {
            "format": "date-time",
            "title": "End",
            "type": "string"
          },
          "event_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarEventType"
              }
            ],
            "default": "custom"
          },
          "resource_id": {
            "minimum": 1.0,
            "title": "Resource Id",
            "type": "integer"
          },
          "resource_type": {
            "$ref": "#/components/schemas/CalendarResourceType"
          },
          "start": {
            "format": "date-time",
            "title": "Start",
            "type": "string"
          },
          "title": {
            "maxLength": 200,
            "title": "Title",
            "type": "string"
          }
        },
        "required": [
          "resource_type",
          "resource_id",
          "title",
          "start",
          "end"
        ],
        "title": "CalendarEventCreate",
        "type": "object"
      },
      "CalendarEventRead": {
        "description": "Schema returned for manual calendar events.",
        "properties": {
          "booking_request_id": {
            "anyOf": [
              {
                "minimum": 1.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Booking Request Id"
          },
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "end": {
            "format": "date-time",
            "title": "End",
            "type": "string"
          },
          "event_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarEventType"
              }
            ],
            "default": "custom"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "resource_id": {
            "minimum": 1.0,
            "title": "Resource Id",
            "type": "integer"
          },
          "resource_type": {
            "$ref": "#/components/schemas/CalendarResourceType"
          },
          "start": {
            "format": "date-time",
            "title": "Start",
            "type": "string"
          },
          "title": {
            "maxLength": 200,
            "title": "Title",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "resource_type",
          "resource_id",
          "title",
          "start",
          "end",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "CalendarEventRead",
        "type": "object"
      },
      "CalendarEventSource": {
        "description": "Origin of a calendar event entry.",
        "enum": [
          "assignment",
          "manual"
        ],
        "title": "CalendarEventSource",
        "type": "string"
      },
      "CalendarEventType": {
        "description": "Classification of calendar events.",
        "enum": [
          "booking",
          "custom",
          "maintenance",
          "blocked"
        ],
        "title": "CalendarEventType",
        "type": "string"
      },
      "CalendarEventUpdate": {
        "description": "Schema for updating manual calendar events.",
        "properties": {
          "booking_request_id": {
            "anyOf": [
              {
                "minimum": 1.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Booking Request Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "end": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End"
          },
          "event_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CalendarEventType"
              },
              {
                "type": "null"
              }
            ]
          },
          "start": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start"
          },
          "title": {
            "anyOf": [
              {
                "maxLength": 200,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          }
        },
        "title": "CalendarEventUpdate",
        "type": "object"
      },
      "CalendarEventView": {
        "description": "Calendar entry representing either manual events or assignments.",
        "properties": {
          "assignment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignment Id"
          },
          "booking_request_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Booking Request Id"
          },
          "booking_status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BookingStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "calendar_event_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Calendar Event Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "end": {
            "format": "date-time",
            "title": "End",
            "type": "string"
          },
          "event_type": {
            "$ref": "#/components/schemas/CalendarEventType"
          },
          "reference_id": {
            "title": "Reference Id",
            "type": "string"
          },
          "resource_id": {
            "title": "Resource Id",
            "type": "integer"
          },
          "resource_type": {
            "$ref": "#/components/schemas/CalendarResourceType"
          },
          "source": {
            "$ref": "#/components/schemas/CalendarEventSource"
          },
          "start": {
            "format": "date-time",
            "title": "Start",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "type": "string"
          }
        },
        "required": [
          "reference_id",
          "resource_type",
          "resource_id",
          "title",
          "start",
          "end",
          "event_type",
          "source"
        ],
        "title": "CalendarEventView",
        "type": "object"
      },
      "CalendarResourceType": {
        "description": "Resource types supported by the calendar.",
        "enum": [
          "vehicle",
          "driver"
        ],
        "title": "CalendarResourceType",
        "type": "string"
      },
      "CalendarResourceView": {
        "description": "Events grouped under a particular resource.",
        "properties": {
          "conflicts": {
            "items": {
              "$ref": "#/components/schemas/CalendarConflictView"
            },
            "title": "Conflicts",
            "type": "array"
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/CalendarEventView"
            },
            "title": "Events",
            "type": "array"
          },
          "resource_id": {
            "title": "Resource Id",
            "type": "integer"
          },
          "resource_name": {
            "title": "Resource Name",
            "type": "string"
          },
          "resource_type": {
            "$ref": "#/components/schemas/CalendarResourceType"
          }
        },
        "required": [
          "resource_type",
          "resource_id",
          "resource_name",
          "events",
          "conflicts"
        ],
        "title": "CalendarResourceView",
        "type": "object"
      },
      "CostOptimisationReport": {
        "description": "Cost optimisation recommendations.",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "string"
          },
          "potential_saving": {
            "minimum": 0.0,
            "title": "Potential Saving",
            "type": "number"
          }
        },
        "required": [
          "label",
          "detail",
          "potential_saving"
        ],
        "title": "CostOptimisationReport",
        "type": "object"
      },
      "CustomReportDriverOption": {
        "description": "Driver option for the custom report builder.",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "CustomReportDriverOption",
        "type": "object"
      },
      "CustomReportOptionsRead": {
        "description": "Available filter options for the custom report builder.",
        "properties": {
          "departments": {
            "items": {
              "type": "string"
            },
            "title": "Departments",
            "type": "array"
          },
          "drivers": {
            "items": {
              "$ref": "#/components/schemas/CustomReportDriverOption"
            },
            "title": "Drivers",
            "type": "array"
          },
          "vehicle_types": {
            "items": {
              "$ref": "#/components/schemas/VehicleType"
            },
            "title": "Vehicle Types",
            "type": "array"
          }
        },
        "required": [
          "departments",
          "vehicle_types",
          "drivers"
        ],
        "title": "CustomReportOptionsRead",
        "type": "object"
      },
      "CustomReportSummaryRead": {
        "description": "Summary payload for the custom report builder.",
        "properties": {
          "average_booking_hours": {
            "minimum": 0.0,
            "title": "Average Booking Hours",
            "type": "number"
          },
          "filters": {
            "title": "Filters",
            "type": "object"
          },
          "total_bookings": {
            "minimum": 0.0,
            "title": "Total Bookings",
            "type": "integer"
          },
          "total_completed": {
            "minimum": 0.0,
            "title": "Total Completed",
            "type": "integer"
          },
          "total_expenses": {
            "minimum": 0.0,
            "title": "Total Expenses",
            "type": "number"
          }
        },
        "required": [
          "total_bookings",
          "total_completed",
          "total_expenses",
          "average_booking_hours",
          "filters"
        ],
        "title": "CustomReportSummaryRead",
        "type": "object"
      },
      "DepartmentUsageReport": {
        "description": "Monthly usage metrics grouped by department.",
        "properties": {
          "completed_trips": {
            "minimum": 0.0,
            "title": "Completed Trips",
            "type": "integer"
          },
          "department": {
            "title": "Department",
            "type": "string"
          },
          "period": {
            "format": "date",
            "title": "Period",
            "type": "string"
          },
          "total_hours": {
            "minimum": 0.0,
            "title": "Total Hours",
            "type": "number"
          },
          "total_passengers": {
            "minimum": 0.0,
            "title": "Total Passengers",
            "type": "integer"
          },
          "total_requests": {
            "minimum": 0.0,
            "title": "Total Requests",
            "type": "integer"
          }
        },
        "required": [
          "period",
          "department",
          "total_requests",
          "completed_trips",
          "total_passengers",
          "total_hours"
        ],
        "title": "DepartmentUsageReport",
        "type": "object"
      },
      "DriverAvailabilitySchedule": {
        "additionalProperties": {
          "$ref": "#/components/schemas/DriverAvailabilityWindow"
        },
        "description": "A weekly schedule keyed by weekday names.",
        "title": "DriverAvailabilitySchedule",
        "type": "object"
      },
      "DriverAvailabilityUpdate": {
        "description": "Schema dedicated to updating driver availability schedules.",
        "properties": {
          "availability_schedule": {
            "$ref": "#/components/schemas/DriverAvailabilitySchedule"
          }
        },
        "required": [
          "availability_schedule"
        ],
        "title": "DriverAvailabilityUpdate",
        "type": "object"
      },
      "DriverAvailabilityWindow": {
        "description": "Represents a single day's availability window.",
        "properties": {
          "available": {
            "default": true,
            "title": "Available",
            "type": "boolean"
          },
          "end": {
            "anyOf": [
              {
                "format": "time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End"
          },
          "start": {
            "anyOf": [
              {
                "format": "time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start"
          }
        },
        "title": "DriverAvailabilityWindow",
        "type": "object"
      },
      "DriverCreate": {
        "description": "Input schema for registering a new driver.",
        "properties": {
          "availability_schedule": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DriverAvailabilitySchedule"
              },
              {
                "type": "null"
              }
            ]
          },
          "employee_code": {
            "maxLength": 30,
            "title": "Employee Code",
            "type": "string"
          },
          "full_name": {
            "maxLength": 120,
            "title": "Full Name",
            "type": "string"
          },
          "license_expiry_date": {
            "format": "date",
            "title": "License Expiry Date",
            "type": "string"
          },
          "license_number": {
            "maxLength": 60,
            "title": "License Number",
            "type": "string"
          },
          "license_type": {
            "default": "B",
            "maxLength": 20,
            "title": "License Type",
            "type": "string"
          },
          "phone_number": {
            "anyOf": [
              {
                "maxLength": 30,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DriverStatus"
              }
            ],
            "default": "ACTIVE"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "required": [
          "full_name",
          "license_expiry_date",
          "employee_code",
          "license_number"
        ],
        "title": "DriverCreate",
        "type": "object"
      },
      "DriverLicenseExpiryNotification": {
        "description": "Payload describing a driver whose license is expiring soon.",
        "properties": {
          "days_until_expiry": {
            "title": "Days Until Expiry",
            "type": "integer"
          },
          "driver_id": {
            "title": "Driver Id",
            "type": "integer"
          },
          "employee_code": {
            "title": "Employee Code",
            "type": "string"
          },
          "full_name": {
            "title": "Full Name",
            "type": "string"
          },
          "license_expiry_date": {
            "format": "date",
            "title": "License Expiry Date",
            "type": "string"
          },
          "license_number": {
            "title": "License Number",
            "type": "string"
          }
        },
        "required": [
          "driver_id",
          "employee_code",
          "full_name",
          "license_number",
          "license_expiry_date",
          "days_until_expiry"
        ],
        "title": "DriverLicenseExpiryNotification",
        "type": "object"
      },
      "DriverPerformanceReport": {
        "description": "Driver workload and completion performance.",
        "properties": {
          "assignments": {
            "minimum": 0.0,
            "title": "Assignments",
            "type": "integer"
          },
          "average_completion_time_hours": {
            "minimum": 0.0,
            "title": "Average Completion Time Hours",
            "type": "number"
          },
          "completed_jobs": {
            "minimum": 0.0,
            "title": "Completed Jobs",
            "type": "integer"
          },
          "driver_id": {
            "title": "Driver Id",
            "type": "integer"
          },
          "full_name": {
            "title": "Full Name",
            "type": "string"
          },
          "total_hours": {
            "minimum": 0.0,
            "title": "Total Hours",
            "type": "number"
          },
          "workload_index": {
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Workload Index",
            "type": "number"
          }
        },
        "required": [
          "driver_id",
          "full_name",
          "assignments",
          "completed_jobs",
          "total_hours",
          "average_completion_time_hours",
          "workload_index"
        ],
        "title": "DriverPerformanceReport",
        "type": "object"
      },
      "DriverRead": {
        "description": "Schema returned via the API for driver records.",
        "properties": {
          "availability_schedule": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DriverAvailabilitySchedule"
              },
              {
                "type": "null"
              }
            ]
          },
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "employee_code": {
            "title": "Employee Code",
            "type": "string"
          },
          "full_name": {
            "maxLength": 120,
            "title": "Full Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "license_expiry_date": {
            "format": "date",
            "title": "License Expiry Date",
            "type": "string"
          },
          "license_number": {
            "title": "License Number",
            "type": "string"
          },
          "license_type": {
            "default": "B",
            "maxLength": 20,
            "title": "License Type",
            "type": "string"
          },
          "phone_number": {
            "anyOf": [
              {
                "maxLength": 30,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DriverStatus"
              }
            ],
            "default": "ACTIVE"
          },
          "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "required": [
          "full_name",
          "license_expiry_date",
          "id",
          "employee_code",
          "license_number",
          "created_at",
          "updated_at"
        ],
        "title": "DriverRead",
        "type": "object"
      },
      "DriverStatus": {
        "description": "Driver status enumeration",
        "enum": [
          "ACTIVE",
          "INACTIVE",
          "ON_LEAVE"
        ],
        "title": "DriverStatus",
        "type": "string"
      },
      "DriverStatusUpdate": {
        "description": "Schema for updating only the driver's status.",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/DriverStatus"
          }
        },
        "required": [
          "status"
        ],
        "title": "DriverStatusUpdate",
        "type": "object"
      },
      "DriverUpdate": {
        "additionalProperties": false,
        "description": "Schema for updating driver profile information.",
        "properties": {
          "availability_schedule": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DriverAvailabilitySchedule"
              },
              {
                "type": "null"
              }
            ]
          },
          "employee_code": {
            "anyOf": [
              {
                "maxLength": 30,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Employee Code"
          },
          "full_name": {
            "anyOf": [
              {
                "maxLength": 120,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "license_expiry_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "License Expiry Date"
          },
          "license_number": {
            "anyOf": [
              {
                "maxLength": 60,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "License Number"
          },
          "license_type": {
            "anyOf": [
              {
                "maxLength": 20,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "License Type"
          },
          "phone_number": {
            "anyOf": [
              {
                "maxLength": 30,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DriverStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "title": "DriverUpdate",
        "type": "object"
      },
      "ExpenseAnalytics": {
        "description": "Aggregated expense metrics across job runs.",
        "properties": {
          "average_fuel_cost": {
            "title": "Average Fuel Cost",
            "type": "string"
          },
          "average_total_expense": {
            "title": "Average Total Expense",
            "type": "string"
          },
          "generated_at": {
            "format": "date-time",
            "title": "Generated At",
            "type": "string"
          },
          "status_breakdown": {
            "items": {
              "$ref": "#/components/schemas/ExpenseStatusSummary"
            },
            "title": "Status Breakdown",
            "type": "array"
          },
          "total_expenses": {
            "title": "Total Expenses",
            "type": "string"
          },
          "total_fuel_cost": {
            "title": "Total Fuel Cost",
            "type": "string"
          },
          "total_jobs": {
            "title": "Total Jobs",
            "type": "integer"
          },
          "total_other_expenses": {
            "title": "Total Other Expenses",
            "type": "string"
          },
          "total_toll_cost": {
            "title": "Total Toll Cost",
            "type": "string"
          }
        },
        "required": [
          "generated_at",
          "total_jobs",
          "total_fuel_cost",
          "total_toll_cost",
          "total_other_expenses",
          "total_expenses",
          "average_fuel_cost",
          "average_total_expense",
          "status_breakdown"
        ],
        "title": "ExpenseAnalytics",
        "type": "object"
      },
      "ExpenseReceiptUploadResponse": {
        "description": "Response returned after uploading an expense receipt.",
        "properties": {
          "content_type": {
            "title": "Content Type",
            "type": "string"
          },
          "expires_in": {
            "title": "Expires In",
            "type": "integer"
          },
          "key": {
            "title": "Key",
            "type": "string"
          },
          "size": {
            "title": "Size",
            "type": "integer"
          },
          "url": {
            "title": "Url",
            "type": "string"
          }
        },
        "required": [
          "key",
          "url",
          "expires_in",
          "content_type",
          "size"
        ],
        "title": "ExpenseReceiptUploadResponse",
        "type": "object"
      },
      "ExpenseReviewDecision": {
        "description": "Possible reviewer decisions for job run expenses.",
        "enum": [
          "APPROVE",
          "REJECT"
        ],
        "title": "ExpenseReviewDecision",
        "type": "string"
      },
      "ExpenseStatus": {
        "description": "Workflow states for recorded expenses.",
        "enum": [
          "NOT_SUBMITTED",
          "PENDING_REVIEW",
          "APPROVED",
          "REJECTED"
        ],
        "title": "ExpenseStatus",
        "type": "string"
      },
      "ExpenseStatusSummary": {
        "description": "Aggregated totals for a single expense status.",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/ExpenseStatus"
          },
          "total_expenses": {
            "title": "Total Expenses",
            "type": "string"
          }
        },
        "required": [
          "status",
          "count",
          "total_expenses"
        ],
        "title": "ExpenseStatusSummary",
        "type": "object"
      },
      "FuelType": {
        "description": "Fuel type enumeration",
        "enum": [
          "GASOLINE",
          "DIESEL",
          "HYBRID",
          "ELECTRIC"
        ],
        "title": "FuelType",
        "type": "string"
      },
      "GalleryImage": {
        "additionalProperties": false,
        "description": "Represents an image asset in a job run gallery.",
        "properties": {
          "content_type": {
            "title": "Content Type",
            "type": "string"
          },
          "height": {
            "anyOf": [
              {
                "minimum": 1.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Height"
          },
          "key": {
            "title": "Key",
            "type": "string"
          },
          "preview_height": {
            "anyOf": [
              {
                "minimum": 1.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Height"
          },
          "preview_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Key"
          },
          "preview_url": {
            "anyOf": [
              {
                "format": "uri",
                "minLength": 1,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Url"
          },
          "preview_width": {
            "anyOf": [
              {
                "minimum": 1.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Width"
          },
          "url": {
            "format": "uri",
            "minLength": 1,
            "title": "Url",
            "type": "string"
          },
          "width": {
            "anyOf": [
              {
                "minimum": 1.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Width"
          }
        },
        "required": [
          "key",
          "url",
          "content_type"
        ],
        "title": "GalleryImage",
        "type": "object"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail",
            "type": "array"
          }
        },
        "title": "HTTPValidationError",
        "type": "object"
      },
      "HealthRecordCreate": {
        "description": "Payload to record a health check.",
        "properties": {
          "component": {
            "title": "Component",
            "type": "string"
          },
          "details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "severity": {
            "default": "info",
            "title": "Severity",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "component",
          "status"
        ],
        "title": "HealthRecordCreate",
        "type": "object"
      },
      "HealthRecordRead": {
        "description": "Health record representation.",
        "properties": {
          "component": {
            "title": "Component",
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "severity": {
            "title": "Severity",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "component",
          "status",
          "severity",
          "details",
          "extra",
          "created_at",
          "updated_at"
        ],
        "title": "HealthRecordRead",
        "type": "object"
      },
      "HealthResponse": {
        "properties": {
          "message": {
            "title": "Message",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "status",
          "message"
        ],
        "title": "HealthResponse",
        "type": "object"
      },
      "HealthSummary": {
        "description": "Aggregated view of system health.",
        "properties": {
          "components": {
            "items": {
              "type": "object"
            },
            "title": "Components",
            "type": "array"
          },
          "overall_status": {
            "title": "Overall Status",
            "type": "string"
          }
        },
        "required": [
          "overall_status",
          "components"
        ],
        "title": "HealthSummary",
        "type": "object"
      },
      "HolidayCreate": {
        "description": "Payload for creating holidays.",
        "properties": {
          "date": {
            "format": "date",
            "title": "Date",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "date",
          "name"
        ],
        "title": "HolidayCreate",
        "type": "object"
      },
      "HolidayRead": {
        "description": "Holiday representation returned to clients.",
        "properties": {
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "date": {
            "format": "date",
            "title": "Date",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "date",
          "name",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "HolidayRead",
        "type": "object"
      },
      "JobRunCheckIn": {
        "additionalProperties": false,
        "description": "Payload for recording a booking job check-in.",
        "properties": {
          "checkin_datetime": {
            "format": "date-time",
            "title": "Checkin Datetime",
            "type": "string"
          },
          "checkin_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Checkin Images"
          },
          "checkin_location": {
            "anyOf": [
              {
                "maxLength": 500,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Checkin Location"
          },
          "checkin_mileage": {
            "minimum": 0.0,
            "title": "Checkin Mileage",
            "type": "integer"
          }
        },
        "required": [
          "checkin_datetime",
          "checkin_mileage"
        ],
        "title": "JobRunCheckIn",
        "type": "object"
      },
      "JobRunCheckOut": {
        "additionalProperties": false,
        "description": "Payload for recording a booking job check-out.",
        "properties": {
          "checkout_datetime": {
            "format": "date-time",
            "title": "Checkout Datetime",
            "type": "string"
          },
          "checkout_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Checkout Images"
          },
          "checkout_location": {
            "anyOf": [
              {
                "maxLength": 500,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Checkout Location"
          },
          "checkout_mileage": {
            "minimum": 0.0,
            "title": "Checkout Mileage",
            "type": "integer"
          },
          "expense_receipts": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expense Receipts"
          },
          "fuel_cost": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "default": "0.00",
            "title": "Fuel Cost"
          },
          "incident_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Incident Images"
          },
          "incident_report": {
            "anyOf": [
              {
                "maxLength": 2000,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Incident Report"
          },
          "other_expenses": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "default": "0.00",
            "title": "Other Expenses"
          },
          "toll_cost": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "default": "0.00",
            "title": "Toll Cost"
          }
        },
        "required": [
          "checkout_datetime",
          "checkout_mileage"
        ],
        "title": "JobRunCheckOut",
        "type": "object"
      },
      "JobRunExpenseReview": {
        "description": "Payload for approving or rejecting recorded job run expenses.",
        "properties": {
          "decision": {
            "$ref": "#/components/schemas/ExpenseReviewDecision"
          },
          "notes": {
            "anyOf": [
              {
                "maxLength": 1000,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "required": [
          "decision"
        ],
        "title": "JobRunExpenseReview",
        "type": "object"
      },
      "JobRunImageGallery": {
        "additionalProperties": false,
        "description": "Grouped check-in and check-out images for a job run.",
        "properties": {
          "checkin": {
            "items": {
              "$ref": "#/components/schemas/GalleryImage"
            },
            "title": "Checkin",
            "type": "array"
          },
          "checkout": {
            "items": {
              "$ref": "#/components/schemas/GalleryImage"
            },
            "title": "Checkout",
            "type": "array"
          }
        },
        "title": "JobRunImageGallery",
        "type": "object"
      },
      "JobRunRead": {
        "description": "Read model representing a job run record.",
        "properties": {
          "booking_request_id": {
            "title": "Booking Request Id",
            "type": "integer"
          },
          "checkin_datetime": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Checkin Datetime"
          },
          "checkin_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Checkin Images"
          },
          "checkin_location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Checkin Location"
          },
          "checkin_mileage": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Checkin Mileage"
          },
          "checkout_datetime": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Checkout Datetime"
          },
          "checkout_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Checkout Images"
          },
          "checkout_location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Checkout Location"
          },
          "checkout_mileage": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Checkout Mileage"
          },
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "expense_receipts": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expense Receipts"
          },
          "expense_review_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expense Review Notes"
          },
          "expense_reviewed_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expense Reviewed At"
          },
          "expense_reviewed_by_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expense Reviewed By Id"
          },
          "expense_status": {
            "$ref": "#/components/schemas/ExpenseStatus"
          },
          "fuel_cost": {
            "title": "Fuel Cost",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "incident_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Incident Images"
          },
          "incident_report": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Incident Report"
          },
          "other_expenses": {
            "title": "Other Expenses",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/JobRunStatus"
          },
          "toll_cost": {
            "title": "Toll Cost",
            "type": "string"
          },
          "total_distance": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Expose the total distance travelled for API responses.",
            "readOnly": true,
            "title": "Total Distance"
          },
          "total_expenses": {
            "description": "Expose the aggregated expenses for API responses.",
            "readOnly": true,
            "title": "Total Expenses",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "booking_request_id",
          "status",
          "fuel_cost",
          "toll_cost",
          "other_expenses",
          "expense_status",
          "created_at",
          "updated_at",
          "total_distance",
          "total_expenses"
        ],
        "title": "JobRunRead",
        "type": "object"
      },
      "JobRunStatus": {
        "description": "Job run status enumeration",
        "enum": [
          "SCHEDULED",
          "IN_PROGRESS",
          "COMPLETED",
          "CANCELLED"
        ],
        "title": "JobRunStatus",
        "type": "string"
      },
      "LoginRequest": {
        "description": "Payload for login requests.",
        "properties": {
          "password": {
            "maxLength": 128,
            "minLength": 8,
            "title": "Password",
            "type": "string"
          },
          "username": {
            "maxLength": 50,
            "minLength": 3,
            "title": "Username",
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ],
        "title": "LoginRequest",
        "type": "object"
      },
      "NotificationChannel": {
        "description": "Supported delivery channels for notifications.",
        "enum": [
          "in_app",
          "email",
          "line"
        ],
        "title": "NotificationChannel",
        "type": "string"
      },
      "NotificationCreateRequest": {
        "additionalProperties": false,
        "description": "Internal schema for manually triggering notifications (testing/admin).",
        "properties": {
          "category": {
            "default": "general",
            "maxLength": 50,
            "title": "Category",
            "type": "string"
          },
          "channels": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/NotificationChannel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Channels"
          },
          "message": {
            "maxLength": 2000,
            "title": "Message",
            "type": "string"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "title": {
            "maxLength": 200,
            "title": "Title",
            "type": "string"
          }
        },
        "required": [
          "title",
          "message"
        ],
        "title": "NotificationCreateRequest",
        "type": "object"
      },
      "NotificationMarkReadResponse": {
        "description": "Response returned after marking a notification as read.",
        "properties": {
          "notification": {
            "$ref": "#/components/schemas/NotificationRead"
          }
        },
        "required": [
          "notification"
        ],
        "title": "NotificationMarkReadResponse",
        "type": "object"
      },
      "NotificationPreferenceRead": {
        "description": "Notification preference settings for a user.",
        "properties": {
          "email_enabled": {
            "title": "Email Enabled",
            "type": "boolean"
          },
          "in_app_enabled": {
            "title": "In App Enabled",
            "type": "boolean"
          },
          "line_enabled": {
            "title": "Line Enabled",
            "type": "boolean"
          },
          "line_token_registered": {
            "title": "Line Token Registered",
            "type": "boolean"
          },
          "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "in_app_enabled",
          "email_enabled",
          "line_enabled",
          "line_token_registered",
          "updated_at"
        ],
        "title": "NotificationPreferenceRead",
        "type": "object"
      },
      "NotificationPreferenceUpdate": {
        "additionalProperties": false,
        "description": "Payload for updating notification preferences.",
        "properties": {
          "email_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Enabled"
          },
          "in_app_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "In App Enabled"
          },
          "line_access_token": {
            "anyOf": [
              {
                "maxLength": 255,
                "minLength": 0,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Access Token"
          },
          "line_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Enabled"
          }
        },
        "title": "NotificationPreferenceUpdate",
        "type": "object"
      },
      "NotificationRead": {
        "description": "Notification payload returned to clients.",
        "properties": {
          "category": {
            "title": "Category",
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "data": {
            "title": "Data",
            "type": "object"
          },
          "delivered_channels": {
            "items": {
              "type": "string"
            },
            "title": "Delivered Channels",
            "type": "array"
          },
          "delivery_errors": {
            "additionalProperties": {
              "type": "string"
            },
            "title": "Delivery Errors",
            "type": "object"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "read_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read At"
          },
          "title": {
            "title": "Title",
            "type": "string"
          }
        },
        "required": [
          "id",
          "title",
          "message",
          "category",
          "created_at"
        ],
        "title": "NotificationRead",
        "type": "object"
      },
      "PendingApprovalNotificationRead": {
        "description": "Schema for booking requests awaiting approval.",
        "properties": {
          "booking_id": {
            "title": "Booking Id",
            "type": "integer"
          },
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "end_datetime": {
            "format": "date-time",
            "title": "End Datetime",
            "type": "string"
          },
          "hours_pending": {
            "title": "Hours Pending",
            "type": "integer"
          },
          "purpose": {
            "title": "Purpose",
            "type": "string"
          },
          "requester_id": {
            "title": "Requester Id",
            "type": "integer"
          },
          "requester_name": {
            "title": "Requester Name",
            "type": "string"
          },
          "start_datetime": {
            "format": "date-time",
            "title": "Start Datetime",
            "type": "string"
          },
          "submitted_at": {
            "format": "date-time",
            "title": "Submitted At",
            "type": "string"
          }
        },
        "required": [
          "booking_id",
          "requester_id",
          "requester_name",
          "purpose",
          "submitted_at",
          "start_datetime",
          "end_datetime",
          "hours_pending"
        ],
        "title": "PendingApprovalNotificationRead",
        "type": "object"
      },
      "PredictiveMaintenanceReport": {
        "description": "Predictive maintenance recommendation for a vehicle.",
        "properties": {
          "projected_service_date": {
            "format": "date",
            "title": "Projected Service Date",
            "type": "string"
          },
          "recommended_action": {
            "title": "Recommended Action",
            "type": "string"
          },
          "registration_number": {
            "title": "Registration Number",
            "type": "string"
          },
          "risk_score": {
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Risk Score",
            "type": "number"
          },
          "vehicle_id": {
            "title": "Vehicle Id",
            "type": "integer"
          },
          "vehicle_type": {
            "$ref": "#/components/schemas/VehicleType"
          }
        },
        "required": [
          "vehicle_id",
          "registration_number",
          "vehicle_type",
          "risk_score",
          "recommended_action",
          "projected_service_date"
        ],
        "title": "PredictiveMaintenanceReport",
        "type": "object"
      },
      "RefreshTokenRequest": {
        "description": "Payload for refreshing access tokens.",
        "properties": {
          "refresh_token": {
            "title": "Refresh Token",
            "type": "string"
          }
        },
        "required": [
          "refresh_token"
        ],
        "title": "RefreshTokenRequest",
        "type": "object"
      },
      "RefreshTokenResponse": {
        "description": "Response returned when a refresh token is exchanged.",
        "properties": {
          "access_token": {
            "title": "Access Token",
            "type": "string"
          },
          "expires_in": {
            "title": "Expires In",
            "type": "integer"
          },
          "issued_at": {
            "format": "date-time",
            "title": "Issued At",
            "type": "string"
          },
          "token_type": {
            "default": "bearer",
            "title": "Token Type",
            "type": "string"
          }
        },
        "required": [
          "access_token",
          "expires_in",
          "issued_at"
        ],
        "title": "RefreshTokenResponse",
        "type": "object"
      },
      "ReportOverviewResponse": {
        "description": "Comprehensive reporting response.",
        "properties": {
          "booking_patterns": {
            "items": {
              "$ref": "#/components/schemas/BookingPatternReport"
            },
            "title": "Booking Patterns",
            "type": "array"
          },
          "cost_recommendations": {
            "items": {
              "$ref": "#/components/schemas/CostOptimisationReport"
            },
            "title": "Cost Recommendations",
            "type": "array"
          },
          "custom_report_options": {
            "$ref": "#/components/schemas/CustomReportOptionsRead"
          },
          "custom_report_summary": {
            "$ref": "#/components/schemas/CustomReportSummaryRead"
          },
          "department_usage": {
            "items": {
              "$ref": "#/components/schemas/DepartmentUsageReport"
            },
            "title": "Department Usage",
            "type": "array"
          },
          "driver_performance": {
            "items": {
              "$ref": "#/components/schemas/DriverPerformanceReport"
            },
            "title": "Driver Performance",
            "type": "array"
          },
          "expense_summary": {
            "$ref": "#/components/schemas/ExpenseAnalytics"
          },
          "generated_at": {
            "format": "date-time",
            "title": "Generated At",
            "type": "string"
          },
          "predictive_maintenance": {
            "items": {
              "$ref": "#/components/schemas/PredictiveMaintenanceReport"
            },
            "title": "Predictive Maintenance",
            "type": "array"
          },
          "timeframe_end": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeframe End"
          },
          "timeframe_start": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeframe Start"
          },
          "vehicle_utilisation": {
            "items": {
              "$ref": "#/components/schemas/VehicleUtilisationReport"
            },
            "title": "Vehicle Utilisation",
            "type": "array"
          }
        },
        "required": [
          "generated_at",
          "timeframe_start",
          "timeframe_end",
          "vehicle_utilisation",
          "department_usage",
          "driver_performance",
          "expense_summary",
          "predictive_maintenance",
          "booking_patterns",
          "cost_recommendations",
          "custom_report_summary",
          "custom_report_options"
        ],
        "title": "ReportOverviewResponse",
        "type": "object"
      },
      "SignedUrlResponse": {
        "additionalProperties": false,
        "description": "Simple response wrapper for signed URL generation.",
        "properties": {
          "expires_in": {
            "minimum": 1.0,
            "title": "Expires In",
            "type": "integer"
          },
          "url": {
            "format": "uri",
            "minLength": 1,
            "title": "Url",
            "type": "string"
          }
        },
        "required": [
          "url",
          "expires_in"
        ],
        "title": "SignedUrlResponse",
        "type": "object"
      },
      "SystemConfigurationRead": {
        "description": "Full configuration view returned to clients.",
        "properties": {
          "approval_escalation_hours": {
            "default": 24,
            "minimum": 0.0,
            "title": "Approval Escalation Hours",
            "type": "integer"
          },
          "auto_cancel_pending_hours": {
            "default": 48,
            "minimum": 0.0,
            "title": "Auto Cancel Pending Hours",
            "type": "integer"
          },
          "booking_lead_time_hours": {
            "default": 4,
            "minimum": 0.0,
            "title": "Booking Lead Time Hours",
            "type": "integer"
          },
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "holidays": {
            "items": {
              "$ref": "#/components/schemas/HolidayRead"
            },
            "title": "Holidays",
            "type": "array"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "maintenance_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maintenance Message"
          },
          "maintenance_mode": {
            "default": false,
            "title": "Maintenance Mode",
            "type": "boolean"
          },
          "max_active_bookings_per_user": {
            "default": 2,
            "minimum": 0.0,
            "title": "Max Active Bookings Per User",
            "type": "integer"
          },
          "max_pending_bookings_per_user": {
            "default": 3,
            "minimum": 0.0,
            "title": "Max Pending Bookings Per User",
            "type": "integer"
          },
          "require_booking_approval": {
            "default": true,
            "title": "Require Booking Approval",
            "type": "boolean"
          },
          "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "working_day_end": {
            "default": "18:00:00",
            "format": "time",
            "title": "Working Day End",
            "type": "string"
          },
          "working_day_start": {
            "default": "08:00:00",
            "format": "time",
            "title": "Working Day Start",
            "type": "string"
          },
          "working_days": {
            "items": {
              "type": "string"
            },
            "title": "Working Days",
            "type": "array"
          },
          "working_hours": {
            "items": {
              "$ref": "#/components/schemas/WorkingHourRead"
            },
            "title": "Working Hours",
            "type": "array"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "SystemConfigurationRead",
        "type": "object"
      },
      "SystemConfigurationUpdate": {
        "description": "Patch payload for system configuration updates.",
        "properties": {
          "approval_escalation_hours": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Approval Escalation Hours"
          },
          "auto_cancel_pending_hours": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Cancel Pending Hours"
          },
          "booking_lead_time_hours": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Booking Lead Time Hours"
          },
          "maintenance_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maintenance Message"
          },
          "maintenance_mode": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maintenance Mode"
          },
          "max_active_bookings_per_user": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Active Bookings Per User"
          },
          "max_pending_bookings_per_user": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Pending Bookings Per User"
          },
          "require_booking_approval": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Require Booking Approval"
          },
          "working_day_end": {
            "anyOf": [
              {
                "format": "time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Working Day End"
          },
          "working_day_start": {
            "anyOf": [
              {
                "format": "time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Working Day Start"
          },
          "working_days": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Working Days"
          }
        },
        "title": "SystemConfigurationUpdate",
        "type": "object"
      },
      "TokenResponse": {
        "description": "Response returned when issuing JWT tokens.",
        "properties": {
          "access_token": {
            "title": "Access Token",
            "type": "string"
          },
          "expires_in": {
            "title": "Expires In",
            "type": "integer"
          },
          "refresh_token": {
            "title": "Refresh Token",
            "type": "string"
          },
          "token_type": {
            "default": "bearer",
            "title": "Token Type",
            "type": "string"
          }
        },
        "required": [
          "access_token",
          "refresh_token",
          "expires_in"
        ],
        "title": "TokenResponse",
        "type": "object"
      },
      "UserActivityEntry": {
        "description": "Aggregated activity metrics for a user.",
        "properties": {
          "actions": {
            "title": "Actions",
            "type": "integer"
          },
          "full_name": {
            "title": "Full Name",
            "type": "string"
          },
          "last_activity": {
            "format": "date-time",
            "title": "Last Activity",
            "type": "string"
          },
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          }
        },
        "required": [
          "user_id",
          "username",
          "full_name",
          "actions",
          "last_activity"
        ],
        "title": "UserActivityEntry",
        "type": "object"
      },
      "UserActivityReport": {
        "description": "Activity report response payload.",
        "properties": {
          "entries": {
            "items": {
              "$ref": "#/components/schemas/UserActivityEntry"
            },
            "title": "Entries",
            "type": "array"
          },
          "generated_at": {
            "format": "date-time",
            "title": "Generated At",
            "type": "string"
          }
        },
        "required": [
          "entries"
        ],
        "title": "UserActivityReport",
        "type": "object"
      },
      "UserCreate": {
        "description": "Schema for user registration input.",
        "properties": {
          "department": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "email": {
            "format": "email",
            "title": "Email",
            "type": "string"
          },
          "full_name": {
            "maxLength": 120,
            "minLength": 1,
            "title": "Full Name",
            "type": "string"
          },
          "password": {
            "maxLength": 128,
            "minLength": 8,
            "title": "Password",
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "username": {
            "maxLength": 50,
            "minLength": 3,
            "title": "Username",
            "type": "string"
          }
        },
        "required": [
          "username",
          "email",
          "full_name",
          "role",
          "password"
        ],
        "title": "UserCreate",
        "type": "object"
      },
      "UserPasswordChange": {
        "description": "Schema for requesting a password change.",
        "properties": {
          "current_password": {
            "maxLength": 128,
            "minLength": 8,
            "title": "Current Password",
            "type": "string"
          },
          "new_password": {
            "maxLength": 128,
            "minLength": 8,
            "title": "New Password",
            "type": "string"
          }
        },
        "required": [
          "current_password",
          "new_password"
        ],
        "title": "UserPasswordChange",
        "type": "object"
      },
      "UserProfileUpdate": {
        "additionalProperties": false,
        "description": "Schema for self-service profile updates.",
        "properties": {
          "department": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "email": {
            "anyOf": [
              {
                "format": "email",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "maxLength": 120,
                "minLength": 1,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "two_fa_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Two Fa Enabled"
          }
        },
        "title": "UserProfileUpdate",
        "type": "object"
      },
      "UserRead": {
        "description": "Schema returned for user information.",
        "properties": {
          "department": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "email": {
            "format": "email",
            "title": "Email",
            "type": "string"
          },
          "full_name": {
            "maxLength": 120,
            "minLength": 1,
            "title": "Full Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "is_active": {
            "title": "Is Active",
            "type": "boolean"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "two_fa_enabled": {
            "title": "Two Fa Enabled",
            "type": "boolean"
          },
          "username": {
            "maxLength": 50,
            "minLength": 3,
            "title": "Username",
            "type": "string"
          }
        },
        "required": [
          "username",
          "email",
          "full_name",
          "role",
          "id",
          "is_active",
          "two_fa_enabled"
        ],
        "title": "UserRead",
        "type": "object"
      },
      "UserRole": {
        "description": "User roles in the system",
        "enum": [
          "requester",
          "manager",
          "fleet_admin",
          "driver",
          "auditor"
        ],
        "title": "UserRole",
        "type": "string"
      },
      "UserRoleUpdate": {
        "description": "Schema for assigning a new role to a user.",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/UserRole"
          }
        },
        "required": [
          "role"
        ],
        "title": "UserRoleUpdate",
        "type": "object"
      },
      "UserUpdate": {
        "additionalProperties": false,
        "description": "Schema for administrative updates to user records.",
        "properties": {
          "department": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "email": {
            "anyOf": [
              {
                "format": "email",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "maxLength": 120,
                "minLength": 1,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "password": {
            "anyOf": [
              {
                "maxLength": 128,
                "minLength": 8,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              },
              {
                "type": "null"
              }
            ]
          },
          "two_fa_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Two Fa Enabled"
          },
          "username": {
            "anyOf": [
              {
                "maxLength": 50,
                "minLength": 3,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          }
        },
        "title": "UserUpdate",
        "type": "object"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location",
            "type": "array"
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError",
        "type": "object"
      },
      "VehicleCreate": {
        "description": "Schema for creating new vehicles.",
        "properties": {
          "brand": {
            "maxLength": 60,
            "title": "Brand",
            "type": "string"
          },
          "current_mileage": {
            "default": 0,
            "minimum": 0.0,
            "title": "Current Mileage",
            "type": "integer"
          },
          "fuel_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FuelType"
              }
            ],
            "default": "GASOLINE"
          },
          "inspection_expiry_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inspection Expiry Date"
          },
          "insurance_expiry_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Insurance Expiry Date"
          },
          "model": {
            "maxLength": 60,
            "title": "Model",
            "type": "string"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "registration_number": {
            "maxLength": 20,
            "minLength": 1,
            "title": "Registration Number",
            "type": "string"
          },
          "seating_capacity": {
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Seating Capacity",
            "type": "integer"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VehicleStatus"
              }
            ],
            "default": "ACTIVE"
          },
          "tax_expiry_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Expiry Date"
          },
          "vehicle_type": {
            "$ref": "#/components/schemas/VehicleType"
          },
          "year_manufactured": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Year Manufactured"
          }
        },
        "required": [
          "vehicle_type",
          "brand",
          "model",
          "seating_capacity",
          "registration_number"
        ],
        "title": "VehicleCreate",
        "type": "object"
      },
      "VehicleDocumentExpiryNotification": {
        "description": "Notification payload for expiring vehicle documents.",
        "properties": {
          "days_until_expiry": {
            "title": "Days Until Expiry",
            "type": "integer"
          },
          "document_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Path"
          },
          "document_type": {
            "$ref": "#/components/schemas/VehicleDocumentType"
          },
          "document_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Url"
          },
          "expiry_date": {
            "format": "date",
            "title": "Expiry Date",
            "type": "string"
          },
          "registration_number": {
            "title": "Registration Number",
            "type": "string"
          },
          "vehicle_id": {
            "title": "Vehicle Id",
            "type": "integer"
          }
        },
        "required": [
          "vehicle_id",
          "registration_number",
          "document_type",
          "expiry_date",
          "days_until_expiry"
        ],
        "title": "VehicleDocumentExpiryNotification",
        "type": "object"
      },
      "VehicleDocumentType": {
        "description": "Vehicle document categories supported by the system.",
        "enum": [
          "tax",
          "insurance",
          "inspection"
        ],
        "title": "VehicleDocumentType",
        "type": "string"
      },
      "VehicleDocumentUploadResponse": {
        "description": "Response returned after successfully uploading a vehicle document.",
        "properties": {
          "document_path": {
            "title": "Document Path",
            "type": "string"
          },
          "document_type": {
            "$ref": "#/components/schemas/VehicleDocumentType"
          },
          "document_url": {
            "title": "Document Url",
            "type": "string"
          },
          "vehicle_id": {
            "title": "Vehicle Id",
            "type": "integer"
          }
        },
        "required": [
          "vehicle_id",
          "document_type",
          "document_path",
          "document_url"
        ],
        "title": "VehicleDocumentUploadResponse",
        "type": "object"
      },
      "VehicleImageUploadResponse": {
        "additionalProperties": false,
        "description": "Response payload for a successfully uploaded vehicle image.",
        "properties": {
          "content_type": {
            "description": "MIME type of the stored image",
            "title": "Content Type",
            "type": "string"
          },
          "expires_in": {
            "description": "URL validity period in seconds",
            "minimum": 1.0,
            "title": "Expires In",
            "type": "integer"
          },
          "height": {
            "minimum": 1.0,
            "title": "Height",
            "type": "integer"
          },
          "key": {
            "description": "Object storage key for the image",
            "title": "Key",
            "type": "string"
          },
          "preview_height": {
            "anyOf": [
              {
                "minimum": 1.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Height"
          },
          "preview_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Object storage key for the preview variant",
            "title": "Preview Key"
          },
          "preview_url": {
            "anyOf": [
              {
                "format": "uri",
                "minLength": 1,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Presigned URL for the preview image",
            "title": "Preview Url"
          },
          "preview_width": {
            "anyOf": [
              {
                "minimum": 1.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Width"
          },
          "size": {
            "description": "Size of the processed image in bytes",
            "minimum": 1.0,
            "title": "Size",
            "type": "integer"
          },
          "url": {
            "description": "Presigned URL for accessing the image",
            "format": "uri",
            "minLength": 1,
            "title": "Url",
            "type": "string"
          },
          "width": {
            "minimum": 1.0,
            "title": "Width",
            "type": "integer"
          }
        },
        "required": [
          "key",
          "url",
          "expires_in",
          "content_type",
          "width",
          "height",
          "size"
        ],
        "title": "VehicleImageUploadResponse",
        "type": "object"
      },
      "VehiclePreference": {
        "description": "Vehicle preference for booking requests",
        "enum": [
          "ANY",
          "SEDAN",
          "VAN",
          "PICKUP",
          "BUS",
          "OTHER"
        ],
        "title": "VehiclePreference",
        "type": "string"
      },
      "VehicleRead": {
        "description": "Schema for returning vehicle data via the API.",
        "properties": {
          "brand": {
            "maxLength": 60,
            "title": "Brand",
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "current_mileage": {
            "default": 0,
            "minimum": 0.0,
            "title": "Current Mileage",
            "type": "integer"
          },
          "fuel_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FuelType"
              }
            ],
            "default": "GASOLINE"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "inspection_document_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inspection Document Path"
          },
          "inspection_expiry_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inspection Expiry Date"
          },
          "insurance_document_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Insurance Document Path"
          },
          "insurance_expiry_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Insurance Expiry Date"
          },
          "model": {
            "maxLength": 60,
            "title": "Model",
            "type": "string"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "registration_number": {
            "title": "Registration Number",
            "type": "string"
          },
          "seating_capacity": {
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Seating Capacity",
            "type": "integer"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VehicleStatus"
              }
            ],
            "default": "ACTIVE"
          },
          "tax_document_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Document Path"
          },
          "tax_expiry_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Expiry Date"
          },
          "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "vehicle_type": {
            "$ref": "#/components/schemas/VehicleType"
          },
          "year_manufactured": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Year Manufactured"
          }
        },
        "required": [
          "vehicle_type",
          "brand",
          "model",
          "seating_capacity",
          "id",
          "registration_number",
          "created_at",
          "updated_at"
        ],
        "title": "VehicleRead",
        "type": "object"
      },
      "VehicleStatus": {
        "description": "Vehicle status enumeration",
        "enum": [
          "ACTIVE",
          "MAINTENANCE",
          "INACTIVE"
        ],
        "title": "VehicleStatus",
        "type": "string"
      },
      "VehicleStatusUpdate": {
        "description": "Schema for updating only the vehicle status.",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/VehicleStatus"
          }
        },
        "required": [
          "status"
        ],
        "title": "VehicleStatusUpdate",
        "type": "object"
      },
      "VehicleType": {
        "description": "Vehicle type enumeration",
        "enum": [
          "SEDAN",
          "VAN",
          "PICKUP",
          "BUS",
          "OTHER"
        ],
        "title": "VehicleType",
        "type": "string"
      },
      "VehicleUpdate": {
        "description": "Schema for updating vehicle details.",
        "properties": {
          "brand": {
            "anyOf": [
              {
                "maxLength": 60,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Brand"
          },
          "current_mileage": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Mileage"
          },
          "fuel_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FuelType"
              },
              {
                "type": "null"
              }
            ]
          },
          "inspection_expiry_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inspection Expiry Date"
          },
          "insurance_expiry_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Insurance Expiry Date"
          },
          "model": {
            "anyOf": [
              {
                "maxLength": 60,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "registration_number": {
            "anyOf": [
              {
                "maxLength": 20,
                "minLength": 1,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registration Number"
          },
          "seating_capacity": {
            "anyOf": [
              {
                "maximum": 100.0,
                "minimum": 1.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seating Capacity"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VehicleStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "tax_expiry_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Expiry Date"
          },
          "vehicle_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VehicleType"
              },
              {
                "type": "null"
              }
            ]
          },
          "year_manufactured": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Year Manufactured"
          }
        },
        "title": "VehicleUpdate",
        "type": "object"
      },
      "VehicleUtilisationReport": {
        "description": "Vehicle utilisation metrics for reporting.",
        "properties": {
          "active_days": {
            "minimum": 0.0,
            "title": "Active Days",
            "type": "integer"
          },
          "average_trip_duration_hours": {
            "minimum": 0.0,
            "title": "Average Trip Duration Hours",
            "type": "number"
          },
          "current_mileage": {
            "minimum": 0.0,
            "title": "Current Mileage",
            "type": "integer"
          },
          "registration_number": {
            "title": "Registration Number",
            "type": "string"
          },
          "total_hours": {
            "minimum": 0.0,
            "title": "Total Hours",
            "type": "number"
          },
          "total_trips": {
            "minimum": 0.0,
            "title": "Total Trips",
            "type": "integer"
          },
          "utilisation_rate": {
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Utilisation Rate",
            "type": "number"
          },
          "vehicle_id": {
            "title": "Vehicle Id",
            "type": "integer"
          },
          "vehicle_type": {
            "$ref": "#/components/schemas/VehicleType"
          }
        },
        "required": [
          "vehicle_id",
          "registration_number",
          "vehicle_type",
          "total_trips",
          "total_hours",
          "active_days",
          "average_trip_duration_hours",
          "utilisation_rate",
          "current_mileage"
        ],
        "title": "VehicleUtilisationReport",
        "type": "object"
      },
      "WorkingHourCreate": {
        "description": "Payload for creating or updating working hours.",
        "properties": {
          "day_of_week": {
            "description": "Lowercase day of week, e.g. 'monday'",
            "title": "Day Of Week",
            "type": "string"
          },
          "end_time": {
            "description": "Working window end time",
            "format": "time",
            "title": "End Time",
            "type": "string"
          },
          "start_time": {
            "description": "Working window start time",
            "format": "time",
            "title": "Start Time",
            "type": "string"
          }
        },
        "required": [
          "day_of_week",
          "start_time",
          "end_time"
        ],
        "title": "WorkingHourCreate",
        "type": "object"
      },
      "WorkingHourRead": {
        "description": "Working hour representation returned to clients.",
        "properties": {
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "day_of_week": {
            "description": "Lowercase day of week, e.g. 'monday'",
            "title": "Day Of Week",
            "type": "string"
          },
          "end_time": {
            "description": "Working window end time",
            "format": "time",
            "title": "End Time",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "start_time": {
            "description": "Working window start time",
            "format": "time",
            "title": "Start Time",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "day_of_week",
          "start_time",
          "end_time",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "WorkingHourRead",
        "type": "object"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "description": "\u0e23\u0e30\u0e1a\u0e1a\u0e08\u0e2d\u0e07\u0e23\u0e16\u0e2a\u0e33\u0e19\u0e31\u0e01\u0e07\u0e32\u0e19 - Vehicle booking and management system API",
    "title": "Office Vehicle Booking System API",
    "version": "1.0.0"
  },
  "openapi": "3.1.0",
  "paths": {
    "/": {
      "get": {
        "description": "Root endpoint",
        "operationId": "root__get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Root"
      }
    },
    "/api/v1/assignments/": {
      "post": {
        "description": "Create a new resource assignment for a booking.",
        "operationId": "create_booking_assignment_api_v1_assignments__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Create Booking Assignment",
        "tags": [
          "assignments"
        ]
      }
    },
    "/api/v1/assignments/by-booking/{booking_id}": {
      "get": {
        "description": "Return the assignment linked to the supplied booking, if any.",
        "operationId": "get_booking_assignment_api_v1_assignments_by_booking__booking_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "booking_id",
            "required": true,
            "schema": {
              "title": "Booking Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Get Booking Assignment",
        "tags": [
          "assignments"
        ]
      }
    },
    "/api/v1/assignments/by-booking/{booking_id}/suggestions": {
      "get": {
        "description": "Return suggested resource allocations for the given booking.",
        "operationId": "list_assignment_suggestions_api_v1_assignments_by_booking__booking_id__suggestions_get",
        "parameters": [
          {
            "in": "path",
            "name": "booking_id",
            "required": true,
            "schema": {
              "title": "Booking Id",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 5,
              "maximum": 20,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AssignmentSuggestionRead"
                  },
                  "title": "Response List Assignment Suggestions Api V1 Assignments By Booking  Booking Id  Suggestions Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "List Assignment Suggestions",
        "tags": [
          "assignments"
        ]
      }
    },
    "/api/v1/assignments/{assignment_id}": {
      "get": {
        "description": "Return the assignment identified by *assignment_id*.",
        "operationId": "get_assignment_detail_api_v1_assignments__assignment_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "assignment_id",
            "required": true,
            "schema": {
              "title": "Assignment Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Get Assignment Detail",
        "tags": [
          "assignments"
        ]
      },
      "patch": {
        "description": "Reassign resources for an existing booking.",
        "operationId": "update_booking_assignment_api_v1_assignments__assignment_id__patch",
        "parameters": [
          {
            "in": "path",
            "name": "assignment_id",
            "required": true,
            "schema": {
              "title": "Assignment Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Update Booking Assignment",
        "tags": [
          "assignments"
        ]
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "description": "Authenticate a user and issue JWT tokens.",
        "operationId": "login_api_v1_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Login",
        "tags": [
          "authentication"
        ]
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "description": "Placeholder logout endpoint relying on RBAC dependency.",
        "operationId": "logout_api_v1_auth_logout_post",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Logout Api V1 Auth Logout Post",
                  "type": "object"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Logout",
        "tags": [
          "authentication"
        ]
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "description": "Return the authenticated user's profile.",
        "operationId": "read_current_user_api_v1_auth_me_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Read Current User",
        "tags": [
          "authentication"
        ]
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "description": "Generate a new access token from a refresh token.",
        "operationId": "refresh_access_token_api_v1_auth_refresh_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Refresh Access Token",
        "tags": [
          "authentication"
        ]
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "description": "Register a new user account.",
        "operationId": "register_user_api_v1_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Register User",
        "tags": [
          "authentication"
        ]
      }
    },
    "/api/v1/bookings/": {
      "get": {
        "description": "List booking requests with optional filters. Restricted to management roles.",
        "operationId": "list_bookings_api_v1_bookings__get",
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Skip",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "maximum": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BookingStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "in": "query",
            "name": "requester_id",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "minimum": 1,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Requester Id"
            }
          },
          {
            "in": "query",
            "name": "department",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "maxLength": 100,
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department"
            }
          },
          {
            "in": "query",
            "name": "vehicle_preference",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/VehiclePreference"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Vehicle Preference"
            }
          },
          {
            "in": "query",
            "name": "start_from",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date-time",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start From"
            }
          },
          {
            "in": "query",
            "name": "start_to",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date-time",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start To"
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BookingRequestRead"
                  },
                  "title": "Response List Bookings Api V1 Bookings  Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "List Bookings",
        "tags": [
          "bookings"
        ]
      },
      "post": {
        "description": "Create a new booking request for the authenticated user.",
        "operationId": "create_booking_api_v1_bookings__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingRequestCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingRequestRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Create Booking",
        "tags": [
          "bookings"
        ]
      }
    },
    "/api/v1/bookings/approvals/pending": {
      "get": {
        "description": "Return booking requests awaiting managerial approval.",
        "operationId": "list_pending_approval_notifications_api_v1_bookings_approvals_pending_get",
        "parameters": [
          {
            "in": "query",
            "name": "pending_for_hours",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Pending For Hours"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PendingApprovalNotificationRead"
                  },
                  "title": "Response List Pending Approval Notifications Api V1 Bookings Approvals Pending Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "List Pending Approval Notifications",
        "tags": [
          "bookings"
        ]
      }
    },
    "/api/v1/bookings/me": {
      "get": {
        "description": "List the authenticated user's booking requests.",
        "operationId": "list_own_bookings_api_v1_bookings_me_get",
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Skip",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "maximum": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BookingStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "in": "query",
            "name": "start_from",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date-time",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start From"
            }
          },
          {
            "in": "query",
            "name": "start_to",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date-time",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start To"
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BookingRequestRead"
                  },
                  "title": "Response List Own Bookings Api V1 Bookings Me Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "List Own Bookings",
        "tags": [
          "bookings"
        ]
      }
    },
    "/api/v1/bookings/{booking_id}": {
      "delete": {
        "description": "Delete a booking request.",
        "operationId": "delete_booking_api_v1_bookings__booking_id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "booking_id",
            "required": true,
            "schema": {
              "title": "Booking Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Delete Booking",
        "tags": [
          "bookings"
        ]
      },
      "get": {
        "description": "Retrieve a single booking request.",
        "operationId": "get_booking_detail_api_v1_bookings__booking_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "booking_id",
            "required": true,
            "schema": {
              "title": "Booking Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingRequestRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Get Booking Detail",
        "tags": [
          "bookings"
        ]
      },
      "patch": {
        "description": "Update details of an existing booking request.",
        "operationId": "update_booking_api_v1_bookings__booking_id__patch",
        "parameters": [
          {
            "in": "path",
            "name": "booking_id",
            "required": true,
            "schema": {
              "title": "Booking Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingRequestUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingRequestRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Update Booking",
        "tags": [
          "bookings"
        ]
      }
    },
    "/api/v1/bookings/{booking_id}/approvals": {
      "get": {
        "description": "Return the approval audit history for the specified booking.",
        "operationId": "list_booking_approval_history_api_v1_bookings__booking_id__approvals_get",
        "parameters": [
          {
            "in": "path",
            "name": "booking_id",
            "required": true,
            "schema": {
              "title": "Booking Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApprovalRead"
                  },
                  "title": "Response List Booking Approval History Api V1 Bookings  Booking Id  Approvals Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "List Booking Approval History",
        "tags": [
          "bookings"
        ]
      }
    },
    "/api/v1/bookings/{booking_id}/approve": {
      "post": {
        "description": "Record a managerial approval decision for the specified booking.",
        "operationId": "approve_booking_request_api_v1_bookings__booking_id__approve_post",
        "parameters": [
          {
            "in": "path",
            "name": "booking_id",
            "required": true,
            "schema": {
              "title": "Booking Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/ApprovalActionRequest"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Payload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingApprovalResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Approve Booking Request",
        "tags": [
          "bookings"
        ]
      }
    },
    "/api/v1/bookings/{booking_id}/reject": {
      "post": {
        "description": "Record a managerial rejection decision for the specified booking.",
        "operationId": "reject_booking_request_api_v1_bookings__booking_id__reject_post",
        "parameters": [
          {
            "in": "path",
            "name": "booking_id",
            "required": true,
            "schema": {
              "title": "Booking Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/ApprovalActionRequest"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Payload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingApprovalResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Reject Booking Request",
        "tags": [
          "bookings"
        ]
      }
    },
    "/api/v1/bookings/{booking_id}/status": {
      "patch": {
        "description": "Update the workflow status of a booking request.",
        "operationId": "update_booking_status_api_v1_bookings__booking_id__status_patch",
        "parameters": [
          {
            "in": "path",
            "name": "booking_id",
            "required": true,
            "schema": {
              "title": "Booking Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingStatusUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingRequestRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Update Booking Status",
        "tags": [
          "bookings"
        ]
      }
    },
    "/api/v1/calendar/events": {
      "post": {
        "description": "Create a manual calendar event for a resource.",
        "operationId": "create_calendar_entry_api_v1_calendar_events_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarEventCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEventRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Create Calendar Entry",
        "tags": [
          "calendar"
        ]
      }
    },
    "/api/v1/calendar/events/{event_id}": {
      "delete": {
        "description": "Delete a manual calendar event.",
        "operationId": "delete_calendar_entry_api_v1_calendar_events__event_id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "event_id",
            "required": true,
            "schema": {
              "title": "Event Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Delete Calendar Entry",
        "tags": [
          "calendar"
        ]
      },
      "get": {
        "description": "Return the calendar event identified by *event_id*.",
        "operationId": "get_calendar_event_api_v1_calendar_events__event_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "event_id",
            "required": true,
            "schema": {
              "title": "Event Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEventRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Get Calendar Event",
        "tags": [
          "calendar"
        ]
      },
      "patch": {
        "description": "Update an existing manual calendar event.",
        "operationId": "update_calendar_entry_api_v1_calendar_events__event_id__patch",
        "parameters": [
          {
            "in": "path",
            "name": "event_id",
            "required": true,
            "schema": {
              "title": "Event Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarEventUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEventRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Update Calendar Entry",
        "tags": [
          "calendar"
        ]
      }
    },
    "/api/v1/calendar/stream": {
      "get": {
        "description": "Stream realtime calendar updates for manual events.",
        "operationId": "stream_calendar_updates_api_v1_calendar_stream_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Stream Calendar Updates",
        "tags": [
          "calendar"
        ]
      }
    },
    "/api/v1/calendar/{resource_type}": {
      "get": {
        "description": "Return calendar entries grouped by resource.",
        "operationId": "get_resource_calendar_api_v1_calendar__resource_type__get",
        "parameters": [
          {
            "in": "path",
            "name": "resource_type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CalendarResourceType"
            }
          },
          {
            "description": "Start of the calendar window",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "description": "Start of the calendar window",
              "format": "date-time",
              "title": "Start",
              "type": "string"
            }
          },
          {
            "description": "End of the calendar window",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "description": "End of the calendar window",
              "format": "date-time",
              "title": "End",
              "type": "string"
            }
          },
          {
            "description": "Filter by resource ids",
            "in": "query",
            "name": "resource_ids",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by resource ids",
              "title": "Resource Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CalendarResourceView"
                  },
                  "title": "Response Get Resource Calendar Api V1 Calendar  Resource Type  Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Get Resource Calendar",
        "tags": [
          "calendar"
        ]
      }
    },
    "/api/v1/calendar/{resource_type}/export/ical": {
      "get": {
        "description": "Export the calendar window as an iCalendar feed.",
        "operationId": "export_resource_calendar_ical_api_v1_calendar__resource_type__export_ical_get",
        "parameters": [
          {
            "in": "path",
            "name": "resource_type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CalendarResourceType"
            }
          },
          {
            "description": "Start of the calendar window",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "description": "Start of the calendar window",
              "format": "date-time",
              "title": "Start",
              "type": "string"
            }
          },
          {
            "description": "End of the calendar window",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "description": "End of the calendar window",
              "format": "date-time",
              "title": "End",
              "type": "string"
            }
          },
          {
            "description": "Filter by resource ids",
            "in": "query",
            "name": "resource_ids",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by resource ids",
              "title": "Resource Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Export Resource Calendar Ical",
        "tags": [
          "calendar"
        ]
      }
    },
    "/api/v1/calendar/{resource_type}/export/pdf": {
      "get": {
        "description": "Download the calendar view as a PDF document.",
        "operationId": "export_resource_calendar_pdf_api_v1_calendar__resource_type__export_pdf_get",
        "parameters": [
          {
            "in": "path",
            "name": "resource_type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CalendarResourceType"
            }
          },
          {
            "description": "Start of the calendar window",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "description": "Start of the calendar window",
              "format": "date-time",
              "title": "Start",
              "type": "string"
            }
          },
          {
            "description": "End of the calendar window",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "description": "End of the calendar window",
              "format": "date-time",
              "title": "End",
              "type": "string"
            }
          },
          {
            "description": "Filter by resource ids",
            "in": "query",
            "name": "resource_ids",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by resource ids",
              "title": "Resource Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Export Resource Calendar Pdf",
        "tags": [
          "calendar"
        ]
      }
    },
    "/api/v1/calendar/{resource_type}/export/print": {
      "get": {
        "description": "Return a printer-friendly HTML schedule.",
        "operationId": "export_resource_calendar_print_api_v1_calendar__resource_type__export_print_get",
        "parameters": [
          {
            "in": "path",
            "name": "resource_type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CalendarResourceType"
            }
          },
          {
            "description": "Start of the calendar window",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "description": "Start of the calendar window",
              "format": "date-time",
              "title": "Start",
              "type": "string"
            }
          },
          {
            "description": "End of the calendar window",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "description": "End of the calendar window",
              "format": "date-time",
              "title": "End",
              "type": "string"
            }
          },
          {
            "description": "Filter by resource ids",
            "in": "query",
            "name": "resource_ids",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by resource ids",
              "title": "Resource Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Export Resource Calendar Print",
        "tags": [
          "calendar"
        ]
      }
    },
    "/api/v1/drivers/": {
      "get": {
        "description": "List drivers with optional filtering and pagination.",
        "operationId": "list_drivers_endpoint_api_v1_drivers__get",
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Skip",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "maximum": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/DriverStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DriverRead"
                  },
                  "title": "Response List Drivers Endpoint Api V1 Drivers  Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "List Drivers Endpoint",
        "tags": [
          "drivers"
        ]
      },
      "post": {
        "description": "Register a new driver profile.",
        "operationId": "create_driver_endpoint_api_v1_drivers__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DriverCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DriverRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Create Driver Endpoint",
        "tags": [
          "drivers"
        ]
      }
    },
    "/api/v1/drivers/license-expiry": {
      "get": {
        "description": "List drivers whose licenses expire within the provided time window.",
        "operationId": "list_driver_license_expiry_notifications_api_v1_drivers_license_expiry_get",
        "parameters": [
          {
            "in": "query",
            "name": "within_days",
            "required": false,
            "schema": {
              "default": 30,
              "maximum": 365,
              "minimum": 0,
              "title": "Within Days",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DriverLicenseExpiryNotification"
                  },
                  "title": "Response List Driver License Expiry Notifications Api V1 Drivers License Expiry Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "List Driver License Expiry Notifications",
        "tags": [
          "drivers"
        ]
      }
    },
    "/api/v1/drivers/{driver_id}": {
      "delete": {
        "description": "Delete a driver from the system.",
        "operationId": "delete_driver_endpoint_api_v1_drivers__driver_id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "driver_id",
            "required": true,
            "schema": {
              "title": "Driver Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Delete Driver Endpoint",
        "tags": [
          "drivers"
        ]
      },
      "get": {
        "description": "Retrieve driver information by identifier.",
        "operationId": "get_driver_detail_api_v1_drivers__driver_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "driver_id",
            "required": true,
            "schema": {
              "title": "Driver Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DriverRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Get Driver Detail",
        "tags": [
          "drivers"
        ]
      },
      "patch": {
        "description": "Update driver profile information.",
        "operationId": "update_driver_endpoint_api_v1_drivers__driver_id__patch",
        "parameters": [
          {
            "in": "path",
            "name": "driver_id",
            "required": true,
            "schema": {
              "title": "Driver Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DriverUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DriverRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Update Driver Endpoint",
        "tags": [
          "drivers"
        ]
      }
    },
    "/api/v1/drivers/{driver_id}/availability": {
      "patch": {
        "description": "Replace the driver's availability schedule.",
        "operationId": "update_driver_availability_endpoint_api_v1_drivers__driver_id__availability_patch",
        "parameters": [
          {
            "in": "path",
            "name": "driver_id",
            "required": true,
            "schema": {
              "title": "Driver Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DriverAvailabilityUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DriverRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Update Driver Availability Endpoint",
        "tags": [
          "drivers"
        ]
      }
    },
    "/api/v1/drivers/{driver_id}/status": {
      "patch": {
        "description": "Update only the status field for a driver.",
        "operationId": "update_driver_status_endpoint_api_v1_drivers__driver_id__status_patch",
        "parameters": [
          {
            "in": "path",
            "name": "driver_id",
            "required": true,
            "schema": {
              "title": "Driver Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DriverStatusUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DriverRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Update Driver Status Endpoint",
        "tags": [
          "drivers"
        ]
      }
    },
    "/api/v1/health/": {
      "get": {
        "description": "Health check endpoint",
        "operationId": "health_check_api_v1_health__get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Health Check",
        "tags": [
          "health"
        ]
      }
    },
    "/api/v1/health/ready": {
      "get": {
        "description": "Readiness check endpoint",
        "operationId": "readiness_check_api_v1_health_ready_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Readiness Check",
        "tags": [
          "health"
        ]
      }
    },
    "/api/v1/job-runs/analytics/expenses": {
      "get": {
        "description": "Return aggregated expense analytics for job runs.",
        "operationId": "get_expense_analytics_api_v1_job_runs_analytics_expenses_get",
        "parameters": [
          {
            "in": "query",
            "name": "start",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date-time",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start"
            }
          },
          {
            "in": "query",
            "name": "end",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date-time",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End"
            }
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ExpenseStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseAnalytics"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Get Expense Analytics",
        "tags": [
          "job-runs"
        ]
      }
    },
    "/api/v1/job-runs/by-booking/{booking_id}": {
      "get": {
        "description": "Return the job run data associated with a booking.",
        "operationId": "get_job_run_api_v1_job_runs_by_booking__booking_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "booking_id",
            "required": true,
            "schema": {
              "title": "Booking Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobRunRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Get Job Run",
        "tags": [
          "job-runs"
        ]
      }
    },
    "/api/v1/job-runs/by-booking/{booking_id}/check-in": {
      "post": {
        "description": "Record check-in information for a booking job.",
        "operationId": "check_in_job_api_v1_job_runs_by_booking__booking_id__check_in_post",
        "parameters": [
          {
            "in": "path",
            "name": "booking_id",
            "required": true,
            "schema": {
              "title": "Booking Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobRunCheckIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobRunRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Check In Job",
        "tags": [
          "job-runs"
        ]
      }
    },
    "/api/v1/job-runs/by-booking/{booking_id}/check-out": {
      "post": {
        "description": "Record check-out information and expenses for a booking job.",
        "operationId": "check_out_job_api_v1_job_runs_by_booking__booking_id__check_out_post",
        "parameters": [
          {
            "in": "path",
            "name": "booking_id",
            "required": true,
            "schema": {
              "title": "Booking Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobRunCheckOut"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobRunRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Check Out Job",
        "tags": [
          "job-runs"
        ]
      }
    },
    "/api/v1/job-runs/by-booking/{booking_id}/expenses/receipts": {
      "post": {
        "description": "Upload a receipt image or document for job expenses.",
        "operationId": "upload_expense_receipt_api_v1_job_runs_by_booking__booking_id__expenses_receipts_post",
        "parameters": [
          {
            "in": "path",
            "name": "booking_id",
            "required": true,
            "schema": {
              "title": "Booking Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_expense_receipt_api_v1_job_runs_by_booking__booking_id__expenses_receipts_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceiptUploadResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Upload Expense Receipt",
        "tags": [
          "job-runs"
        ]
      }
    },
    "/api/v1/job-runs/by-booking/{booking_id}/expenses/review": {
      "post": {
        "description": "Approve or reject recorded job run expenses.",
        "operationId": "review_job_run_expenses_api_v1_job_runs_by_booking__booking_id__expenses_review_post",
        "parameters": [
          {
            "in": "path",
            "name": "booking_id",
            "required": true,
            "schema": {
              "title": "Booking Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobRunExpenseReview"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobRunRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Review Job Run Expenses",
        "tags": [
          "job-runs"
        ]
      }
    },
    "/api/v1/job-runs/by-booking/{booking_id}/image-gallery": {
      "get": {
        "description": "Return presigned URLs for the job's before/after image sets.",
        "operationId": "get_job_run_image_gallery_api_v1_job_runs_by_booking__booking_id__image_gallery_get",
        "parameters": [
          {
            "in": "path",
            "name": "booking_id",
            "required": true,
            "schema": {
              "title": "Booking Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobRunImageGallery"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Get Job Run Image Gallery",
        "tags": [
          "job-runs"
        ]
      }
    },
    "/api/v1/notifications/": {
      "get": {
        "description": "Return a list of notifications for the current user.",
        "operationId": "list_notifications_api_v1_notifications__get",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": 0,
              "title": "Offset",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "unread_only",
            "required": false,
            "schema": {
              "default": false,
              "title": "Unread Only",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NotificationRead"
                  },
                  "title": "Response List Notifications Api V1 Notifications  Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "List Notifications",
        "tags": [
          "notifications"
        ]
      }
    },
    "/api/v1/notifications/dispatch-test": {
      "post": {
        "description": "Allow users to trigger a notification to verify their settings.",
        "operationId": "dispatch_test_notification_api_v1_notifications_dispatch_test_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Dispatch Test Notification",
        "tags": [
          "notifications"
        ]
      }
    },
    "/api/v1/notifications/preferences": {
      "get": {
        "description": "Return the user's current notification preferences.",
        "operationId": "get_preferences_api_v1_notifications_preferences_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationPreferenceRead"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Get Preferences",
        "tags": [
          "notifications"
        ]
      },
      "put": {
        "description": "Update the user's notification preferences.",
        "operationId": "update_preferences_api_v1_notifications_preferences_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationPreferenceUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationPreferenceRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Update Preferences",
        "tags": [
          "notifications"
        ]
      }
    },
    "/api/v1/notifications/read-all": {
      "post": {
        "description": "Mark all notifications as read for the current user.",
        "operationId": "mark_all_read_api_v1_notifications_read_all_post",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "title": "Response Mark All Read Api V1 Notifications Read All Post",
                  "type": "object"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Mark All Read",
        "tags": [
          "notifications"
        ]
      }
    },
    "/api/v1/notifications/unread-count": {
      "get": {
        "description": "Return the number of unread notifications for the current user.",
        "operationId": "unread_count_api_v1_notifications_unread_count_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "title": "Response Unread Count Api V1 Notifications Unread Count Get",
                  "type": "object"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Unread Count",
        "tags": [
          "notifications"
        ]
      }
    },
    "/api/v1/notifications/{notification_id}/read": {
      "post": {
        "description": "Mark the specified notification as read.",
        "operationId": "mark_notification_read_api_v1_notifications__notification_id__read_post",
        "parameters": [
          {
            "in": "path",
            "name": "notification_id",
            "required": true,
            "schema": {
              "title": "Notification Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationMarkReadResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Mark Notification Read",
        "tags": [
          "notifications"
        ]
      }
    },
    "/api/v1/reports/health": {
      "get": {
        "description": "Simple health endpoint to verify reporting access.",
        "operationId": "get_reporting_health_api_v1_reports_health_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Get Reporting Health Api V1 Reports Health Get",
                  "type": "object"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Get Reporting Health",
        "tags": [
          "reports"
        ]
      }
    },
    "/api/v1/reports/overview": {
      "get": {
        "description": "Return the consolidated reporting overview for the selected filters.",
        "operationId": "get_report_overview_api_v1_reports_overview_get",
        "parameters": [
          {
            "in": "query",
            "name": "start",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date-time",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start"
            }
          },
          {
            "in": "query",
            "name": "end",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date-time",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End"
            }
          },
          {
            "in": "query",
            "name": "department",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "maxLength": 100,
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department"
            }
          },
          {
            "in": "query",
            "name": "vehicle_type",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/VehicleType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Vehicle Type"
            }
          },
          {
            "in": "query",
            "name": "drivers",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Drivers"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOverviewResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Get Report Overview",
        "tags": [
          "reports"
        ]
      }
    },
    "/api/v1/system/activity": {
      "get": {
        "description": "Return user activity metrics derived from audit logs.",
        "operationId": "user_activity_report_endpoint_api_v1_system_activity_get",
        "parameters": [
          {
            "in": "query",
            "name": "days",
            "required": false,
            "schema": {
              "default": 7,
              "maximum": 90,
              "minimum": 1,
              "title": "Days",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 50,
              "maximum": 200,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserActivityReport"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "User Activity Report Endpoint",
        "tags": [
          "system-admin"
        ]
      }
    },
    "/api/v1/system/audit": {
      "get": {
        "description": "Search the audit trail with flexible filters.",
        "operationId": "search_audit_endpoint_api_v1_system_audit_get",
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Skip",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 50,
              "maximum": 500,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "in": "query",
            "name": "action",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Action"
            }
          },
          {
            "in": "query",
            "name": "resource",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Resource"
            }
          },
          {
            "in": "query",
            "name": "status_code",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status Code"
            }
          },
          {
            "in": "query",
            "name": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Query"
            }
          },
          {
            "in": "query",
            "name": "date_from",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date-time",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "in": "query",
            "name": "date_to",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date-time",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogSearchResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Search Audit Endpoint",
        "tags": [
          "system-admin"
        ]
      }
    },
    "/api/v1/system/audit/statistics": {
      "get": {
        "description": "Return quick statistics for audit trail monitoring.",
        "operationId": "audit_statistics_endpoint_api_v1_system_audit_statistics_get",
        "parameters": [
          {
            "in": "query",
            "name": "hours",
            "required": false,
            "schema": {
              "default": 24,
              "minimum": 1,
              "title": "Hours",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "additionalProperties": {
                          "type": "integer"
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "title": "Response Audit Statistics Endpoint Api V1 System Audit Statistics Get",
                  "type": "object"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Audit Statistics Endpoint",
        "tags": [
          "system-admin"
        ]
      }
    },
    "/api/v1/system/config": {
      "get": {
        "description": "Return the current global system configuration.",
        "operationId": "read_system_configuration_api_v1_system_config_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemConfigurationRead"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Read System Configuration",
        "tags": [
          "system-admin"
        ]
      },
      "put": {
        "description": "Update global system settings.",
        "operationId": "update_system_configuration_endpoint_api_v1_system_config_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemConfigurationUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemConfigurationRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Update System Configuration Endpoint",
        "tags": [
          "system-admin"
        ]
      }
    },
    "/api/v1/system/health/checks": {
      "get": {
        "description": "Return recent system health checks.",
        "operationId": "list_health_checks_endpoint_api_v1_system_health_checks_get",
        "parameters": [
          {
            "in": "query",
            "name": "component",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Component"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 50,
              "maximum": 200,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/HealthRecordRead"
                  },
                  "title": "Response List Health Checks Endpoint Api V1 System Health Checks Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "List Health Checks Endpoint",
        "tags": [
          "system-admin"
        ]
      },
      "post": {
        "description": "Record an explicit health check reading.",
        "operationId": "record_health_check_endpoint_api_v1_system_health_checks_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HealthRecordCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthRecordRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Record Health Check Endpoint",
        "tags": [
          "system-admin"
        ]
      }
    },
    "/api/v1/system/health/summary": {
      "get": {
        "description": "Return the latest health summary across monitored components.",
        "operationId": "health_summary_endpoint_api_v1_system_health_summary_get",
        "parameters": [
          {
            "in": "query",
            "name": "window_minutes",
            "required": false,
            "schema": {
              "default": 60,
              "minimum": 1,
              "title": "Window Minutes",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthSummary"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Health Summary Endpoint",
        "tags": [
          "system-admin"
        ]
      }
    },
    "/api/v1/system/holidays": {
      "get": {
        "description": "Return configured organisation-wide holidays.",
        "operationId": "list_holidays_endpoint_api_v1_system_holidays_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/HolidayRead"
                  },
                  "title": "Response List Holidays Endpoint Api V1 System Holidays Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "List Holidays Endpoint",
        "tags": [
          "system-admin"
        ]
      },
      "post": {
        "description": "Create a new holiday entry.",
        "operationId": "create_holiday_endpoint_api_v1_system_holidays_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HolidayCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HolidayRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Create Holiday Endpoint",
        "tags": [
          "system-admin"
        ]
      }
    },
    "/api/v1/system/holidays/{holiday_id}": {
      "delete": {
        "description": "Delete a configured holiday.",
        "operationId": "delete_holiday_endpoint_api_v1_system_holidays__holiday_id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "holiday_id",
            "required": true,
            "schema": {
              "title": "Holiday Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Delete Holiday Endpoint",
        "tags": [
          "system-admin"
        ]
      }
    },
    "/api/v1/system/working-hours": {
      "get": {
        "description": "Return configured working hour windows.",
        "operationId": "list_working_hours_endpoint_api_v1_system_working_hours_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkingHourRead"
                  },
                  "title": "Response List Working Hours Endpoint Api V1 System Working Hours Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "List Working Hours Endpoint",
        "tags": [
          "system-admin"
        ]
      }
    },
    "/api/v1/system/working-hours/{day_of_week}": {
      "delete": {
        "description": "Remove configured working hours for the specified day.",
        "operationId": "delete_working_hours_endpoint_api_v1_system_working_hours__day_of_week__delete",
        "parameters": [
          {
            "in": "path",
            "name": "day_of_week",
            "required": true,
            "schema": {
              "title": "Day Of Week",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Delete Working Hours Endpoint",
        "tags": [
          "system-admin"
        ]
      },
      "put": {
        "description": "Create or update working hours for a given day of week.",
        "operationId": "upsert_working_hours_endpoint_api_v1_system_working_hours__day_of_week__put",
        "parameters": [
          {
            "in": "path",
            "name": "day_of_week",
            "required": true,
            "schema": {
              "title": "Day Of Week",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkingHourCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingHourRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Upsert Working Hours Endpoint",
        "tags": [
          "system-admin"
        ]
      }
    },
    "/api/v1/uploads/vehicle-images": {
      "post": {
        "description": "Validate, process, and persist a vehicle condition image.",
        "operationId": "upload_vehicle_image_api_v1_uploads_vehicle_images_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_vehicle_image_api_v1_uploads_vehicle_images_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleImageUploadResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Upload Vehicle Image",
        "tags": [
          "uploads"
        ]
      }
    },
    "/api/v1/uploads/vehicle-images/{image_key}/signed-url": {
      "get": {
        "description": "Return a signed URL for accessing ``image_key``.",
        "operationId": "get_vehicle_image_signed_url_api_v1_uploads_vehicle_images__image_key__signed_url_get",
        "parameters": [
          {
            "in": "path",
            "name": "image_key",
            "required": true,
            "schema": {
              "title": "Image Key",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignedUrlResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Get Vehicle Image Signed Url",
        "tags": [
          "uploads"
        ]
      }
    },
    "/api/v1/users/": {
      "get": {
        "description": "List users with optional filtering and pagination.",
        "operationId": "list_users_endpoint_api_v1_users__get",
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Skip",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "maximum": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "role",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/UserRole"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Role"
            }
          },
          {
            "in": "query",
            "name": "is_active",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserRead"
                  },
                  "title": "Response List Users Endpoint Api V1 Users  Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "List Users Endpoint",
        "tags": [
          "users"
        ]
      },
      "post": {
        "description": "Create a new user. Restricted to management roles.",
        "operationId": "create_user_endpoint_api_v1_users__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Create User Endpoint",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v1/users/me": {
      "get": {
        "description": "Return profile information for the authenticated user.",
        "operationId": "read_own_profile_api_v1_users_me_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Read Own Profile",
        "tags": [
          "users"
        ]
      },
      "patch": {
        "description": "Allow the authenticated user to update their own profile.",
        "operationId": "update_own_profile_api_v1_users_me_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Update Own Profile",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v1/users/me/change-password": {
      "post": {
        "description": "Update the authenticated user's password after verifying the current one.",
        "operationId": "change_password_api_v1_users_me_change_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordChange"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Change Password Api V1 Users Me Change Password Post",
                  "type": "object"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Change Password",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v1/users/{user_id}": {
      "delete": {
        "description": "Delete the specified user from the system.",
        "operationId": "delete_user_endpoint_api_v1_users__user_id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Delete User Endpoint",
        "tags": [
          "users"
        ]
      },
      "get": {
        "description": "Retrieve a single user by identifier.",
        "operationId": "get_user_detail_api_v1_users__user_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Get User Detail",
        "tags": [
          "users"
        ]
      },
      "patch": {
        "description": "Update the specified user's information.",
        "operationId": "update_user_endpoint_api_v1_users__user_id__patch",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Update User Endpoint",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v1/users/{user_id}/role": {
      "post": {
        "description": "Assign a new role to an existing user. Restricted to fleet administrators.",
        "operationId": "assign_role_api_v1_users__user_id__role_post",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Assign Role",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v1/vehicles/": {
      "get": {
        "description": "List vehicles with optional filtering and pagination.",
        "operationId": "list_vehicles_endpoint_api_v1_vehicles__get",
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Skip",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "maximum": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/VehicleStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "in": "query",
            "name": "vehicle_type",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/VehicleType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Vehicle Type"
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/VehicleRead"
                  },
                  "title": "Response List Vehicles Endpoint Api V1 Vehicles  Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "List Vehicles Endpoint",
        "tags": [
          "vehicles"
        ]
      },
      "post": {
        "description": "Create a new vehicle entry.",
        "operationId": "create_vehicle_endpoint_api_v1_vehicles__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Create Vehicle Endpoint",
        "tags": [
          "vehicles"
        ]
      }
    },
    "/api/v1/vehicles/document-expiry": {
      "get": {
        "description": "Return notifications for vehicle documents expiring soon.",
        "operationId": "get_vehicle_document_expiry_notifications_api_v1_vehicles_document_expiry_get",
        "parameters": [
          {
            "in": "query",
            "name": "within_days",
            "required": false,
            "schema": {
              "default": 30,
              "maximum": 365,
              "minimum": 0,
              "title": "Within Days",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/VehicleDocumentExpiryNotification"
                  },
                  "title": "Response Get Vehicle Document Expiry Notifications Api V1 Vehicles Document Expiry Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Get Vehicle Document Expiry Notifications",
        "tags": [
          "vehicles"
        ]
      }
    },
    "/api/v1/vehicles/{vehicle_id}": {
      "delete": {
        "description": "Delete a vehicle from the fleet.",
        "operationId": "delete_vehicle_endpoint_api_v1_vehicles__vehicle_id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "vehicle_id",
            "required": true,
            "schema": {
              "title": "Vehicle Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Delete Vehicle Endpoint",
        "tags": [
          "vehicles"
        ]
      },
      "get": {
        "description": "Retrieve a vehicle by its identifier.",
        "operationId": "get_vehicle_detail_api_v1_vehicles__vehicle_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "vehicle_id",
            "required": true,
            "schema": {
              "title": "Vehicle Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Get Vehicle Detail",
        "tags": [
          "vehicles"
        ]
      },
      "patch": {
        "description": "Update vehicle information.",
        "operationId": "update_vehicle_endpoint_api_v1_vehicles__vehicle_id__patch",
        "parameters": [
          {
            "in": "path",
            "name": "vehicle_id",
            "required": true,
            "schema": {
              "title": "Vehicle Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Update Vehicle Endpoint",
        "tags": [
          "vehicles"
        ]
      }
    },
    "/api/v1/vehicles/{vehicle_id}/documents/{document_type}": {
      "post": {
        "description": "Upload and attach a document to a vehicle.",
        "operationId": "upload_vehicle_document_api_v1_vehicles__vehicle_id__documents__document_type__post",
        "parameters": [
          {
            "in": "path",
            "name": "vehicle_id",
            "required": true,
            "schema": {
              "title": "Vehicle Id",
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "document_type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/VehicleDocumentType"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_vehicle_document_api_v1_vehicles__vehicle_id__documents__document_type__post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleDocumentUploadResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Upload Vehicle Document",
        "tags": [
          "vehicles"
        ]
      }
    },
    "/api/v1/vehicles/{vehicle_id}/status": {
      "patch": {
        "description": "Update only the status of a vehicle.",
        "operationId": "update_vehicle_status_endpoint_api_v1_vehicles__vehicle_id__status_patch",
        "parameters": [
          {
            "in": "path",
            "name": "vehicle_id",
            "required": true,
            "schema": {
              "title": "Vehicle Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleStatusUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleRead"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "summary": "Update Vehicle Status Endpoint",
        "tags": [
          "vehicles"
        ]
      }
    },
    "/health": {
      "get": {
        "description": "Health check endpoint",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Health Check"
      }
    }
  }
}